<#
.SYNOPSIS
Un assistant pour configurer ou r√©initialiser le serveur DNS d'une interface r√©seau.
.DESCRIPTION
Ce script pr√©sente un menu interactif pour d√©finir une adresse de serveur DNS manuelle
ou pour r√©tablir la configuration automatique (DHCP).
Il suffit de double-cliquer sur le fichier pour le lancer.
#>

# --- GESTION DE LA POLITIQUE D'EX√âCUTION (Commentaire pour les √©tudiants) ---
# Pour autoriser l'ex√©cution de ce script, ouvrez un terminal PowerShell en admin et ex√©cutez :
# Set-ExecutionPolicy -Scope Process -ExecutionPolicy RemoteSigned

[CmdletBinding()]
param() # Pas de param√®tres externes, tout se fait via le menu

# --- V√©rification des privil√®ges d'administrateur ---
if (-not ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Warning "Ce script n√©cessite des privil√®ges d'administrateur."
    Write-Host "‚è´ Tentative de red√©marrage en mode administrateur..." -ForegroundColor Yellow
    Start-Process powershell -ArgumentList "-ExecutionPolicy Bypass -File `"$PSCommandPath`"" -Verb RunAs
    exit
}

# --- PARAM√àTRES MODIFIABLES ---
[string]$dnsServerIP_preset = "192.168.56.50" # Adresse pr√©-remplie pour le prompt

# =====================================================================================
# == MENU INTERACTIF ==
# =====================================================================================
Clear-Host
Write-Host "========================================" -ForegroundColor Green
Write-Host "  Assistant de Configuration DNS"
Write-Host "========================================" -ForegroundColor Green
Write-Host
Write-Host "Que souhaitez-vous faire ?" -ForegroundColor Yellow
Write-Host "  [1] Configurer le DNS pour le Labo (utiliser le serveur local)"
Write-Host "  [2] R√©initialiser le DNS (revenir en mode automatique/DHCP)"
Write-Host "  [Q] Quitter"
Write-Host

$choice = Read-Host -Prompt "Votre choix"

# --- S√âLECTION DE L'INTERFACE (COMMUN AUX DEUX ACTIONS) ---
if ($choice -eq '1' -or $choice -eq '2') {
    Write-Host "`nüîé Recherche des interfaces r√©seau actives..." -ForegroundColor Cyan
    $interfaces = Get-NetAdapter | Where-Object { $_.Status -eq 'Up' }

    if (-not $interfaces) {
        Write-Error "Aucune interface r√©seau active trouv√©e."
        exit
    }

    Write-Host "Veuillez choisir l'interface r√©seau √† configurer :" -ForegroundColor Yellow
    for ($i = 0; $i -lt $interfaces.Count; $i++) {
        Write-Host ("  [{0}] {1}" -f ($i + 1), $interfaces[$i].Name)
    }

    $interfaceChoice = Read-Host -Prompt "Entrez le num√©ro de l'interface"
    try {
        $selectedInterface = $interfaces[[int]$interfaceChoice - 1]
        $interfaceAlias = $selectedInterface.Name
        Write-Host ("Interface s√©lectionn√©e : '{0}'" -f $interfaceAlias) -ForegroundColor Green
    }
    catch {
        Write-Error "S√©lection invalide."
        # On attend avant de quitter pour que l'utilisateur voie l'erreur
        Start-Sleep -Seconds 3
        exit
    }
}


# --- ACTIONS SELON LE CHOIX DU MENU ---
switch ($choice) {
    '1' {
        # --- Mode Configuration ---
        $dnsServerIP_input = Read-Host -Prompt "Veuillez saisir l'adresse IP du serveur DNS (laissez vide pour utiliser $dnsServerIP_preset)"
        if ([string]::IsNullOrWhiteSpace($dnsServerIP_input)) {
            $dnsServerIP_input = $dnsServerIP_preset
        }
        
        Write-Host "`nüõ†Ô∏è  Configuration du DNS sur '$dnsServerIP_input' pour l'interface '$interfaceAlias'..." -ForegroundColor Cyan
        Set-DnsClientServerAddress -InterfaceAlias $interfaceAlias -ServerAddresses ($dnsServerIP_input)
        
        Write-Host "üîç V√©rification..."
        Start-Sleep -Seconds 1
        $newConfig = Get-DnsClientServerAddress -InterfaceAlias $interfaceAlias
        
        if ($newConfig.ServerAddresses -contains $dnsServerIP_input) {
            Write-Host "‚úÖ Succ√®s ! Le DNS '$dnsServerIP_input' est bien configur√©." -ForegroundColor Green
        } else {
            Write-Error "‚ùå √âchec ! La configuration du DNS a √©chou√©."
        }
    }
    '2' {
        # --- Mode R√©initialisation ---
        Write-Host "`nüîÑ R√©initialisation de la configuration DNS pour l'interface '$interfaceAlias'..." -ForegroundColor Cyan
        Set-DnsClientServerAddress -InterfaceAlias $interfaceAlias -ResetServerAddresses
        
        Write-Host "üîç V√©rification..."
        $newConfig = Get-DnsClientServerAddress -InterfaceAlias $interfaceAlias
        
        if ($newConfig.ServerAddresses.Count -gt 0) {
            Write-Host "‚úÖ DNS r√©initialis√©. Les serveurs suivants sont maintenant actifs (via DHCP) :" -ForegroundColor Green
            $newConfig.ServerAddresses | ForEach-Object { Write-Host "  - $_" -ForegroundColor Green }
        } else {
            Write-Host "‚úÖ DNS r√©initialis√© (configuration automatique)." -ForegroundColor Green
        }
    }
    default {
        Write-Host "Op√©ration annul√©e."
    }
}

Write-Host "`nAppuyez sur une touche pour quitter."
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
